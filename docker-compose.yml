version: '3.9'

services:
  # Zookeeper (Bitnami per ARM64)
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: "zookeeper-volley"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_ENABLE_PROMETHEUS_METRICS: "false"
    ports:
      - "2181:2181"  # Esposto su localhost
    networks:
      - network

  # Kafka (Bitnami per ARM64)
  kafka-volley:
    image: bitnami/kafka:3.6
    container_name: "kafka-volley"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      # Unico listener su 0.0.0.0:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-volley:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CREATE_TOPICS: "matchvolley:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - network


  # Kafka Web UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafkaWebUI-volley
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-volley:9092
      DYNAMIC_CONFIG_ENABLED: "true"
    ports:
      - "8080:8080"  # Esposto su localhost
    networks:
      - network
    depends_on:
      - kafka-volley

  # Logstash
  logstash-volley:
    image: docker.elastic.co/logstash/logstash:8.12.0
    container_name: logstash-volley
    ports:
      - "5044:5044"  # Esposto su localhost
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - kafka-volley
    networks:
      - network

  # Elasticsearch
  elasticsearch-volley:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1-arm64
    container_name: "elasticsearch-volley"
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"  # Esposto su localhost
    networks:
      - network

  # Kibana
  kibana-volley:
    image: docker.elastic.co/kibana/kibana:8.7.1-arm64
    container_name: kibana-volley
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch-volley:9200"
    ports:
      - "5601:5601"  # Esposto su localhost
    networks:
      - network
    depends_on:
      - elasticsearch-volley

  # Spark
  spark-volley:
    build: ./spark/
    container_name: "spark-volley"
    volumes:
      - ./spark/spark.py:/home/spark.py
      - ./spark/checkpoint:/tmp/spark-es-checkpoint
    networks:
      - network
    depends_on:
      - elasticsearch-volley
    
  # Backend
  backend-volley:
    build: ./backend
    container_name: backend-volley
    depends_on:
      - elasticsearch-volley
    ports:
      - "8000:8000"
    networks:
      - network


networks:
  network:
    driver: bridge